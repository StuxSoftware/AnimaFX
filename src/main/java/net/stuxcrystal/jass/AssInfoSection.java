package net.stuxcrystal.jass;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * Returns the section for the info.
 */
public class AssInfoSection extends AssSection<AssInfoEntry> {

    @Override
    public String getSectionTitle() {
        return "Script Info";
    }

    @Override
    public List<AssInfoEntry> parse(List<String> lines) {
        List<AssInfoEntry> result = new ArrayList<>();

        for (String line : lines) {

            // Ignore comments.
            if (line.startsWith(";"))
                continue;

            if (!line.contains(":"))
                continue;

            String[] data = line.split(":[ ]*", 2);
            result.add(new AssInfoEntry(data[0], data[1]));
        }

        return result;
    }

    @Override
    public List<String> dump(List<AssInfoEntry> rawEntries) {
        // Enfore
        List<String> result = new ArrayList<>(Arrays.asList("; Generated by jAss " + AssLibraryData.VERSION));
        List<AssInfoEntry> entries = new ArrayList<>(rawEntries);

        // Find the header entry.
        AssInfoEntry header = null;
        for (AssInfoEntry entry : entries) {
            if (entry.getKey().equalsIgnoreCase("Header")) {
                header = entry;
                break;
            }
        }

        // Remove the entry if there is one and print the header.
        if (header!=null) {
            entries.remove(header);
            for (String line : header.getValue().split("\n")) {
                result.add("; " + line);
            }
        }

        // Prints all entries.
        for (AssInfoEntry entry : entries) {
            result.add(entry.getKey() + ": " + entry.getValue());
        }

        return result;
    }
}
